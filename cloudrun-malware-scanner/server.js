const clamd = require("clamdjs");
const formidable = require("formidable");
const http2 = require("http2");

const PORT = process.env.PORT || 8080;
const CLAMD_HOST = "127.0.0.1";
const CLAMD_PORT = 3310;

// FIXME: This is 1 HOUR
const CLAMD_TIMEOUT = 1000 * 60 * 60;

const scanner = clamd.createScanner(CLAMD_HOST, CLAMD_PORT);

const server = http2.createServer((req, res) => {
  console.info("Parsing request...");
  const form = formidable({ maxFileSize: 2 * 1024 * 1024 * 1024 });

  form.parse(req, async (err, fields, files) => {
    const startTime = Date.now();
    if (err) {
      res.writeHead(err.httpCode || 400, { "Content-Type": "text/plain" });
      res.end(String(err));
      return;
    }
    res.writeHead(200, { "Content-Type": "application/json" });

    console.info("Scanning...");

    // FIXME: use scanner.scanStream()
    const result = await scanner.scanFile(files.file.filepath, CLAMD_TIMEOUT);
    const resultStr = clamd.isCleanReply(result) ? "clean" : "INFECTED";
    const scanDuration = Date.now() - startTime;
    console.info(`It took ${scanDuration}ms to scan ${files.file.filepath}.`);

    res.end(JSON.stringify({ scanResult: resultStr }, null, 2));

    // FIXME: do we need to do anything to clean up the file?
  });

  return;
});

server.listen(PORT);
console.log(`Listening on port ${PORT}`);
